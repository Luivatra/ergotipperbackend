/*
 * Ergo Explorer API v1
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.ergolui.ergotipperbackend.explorer.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
/**
 * Full block info
 */
@Schema(description = "Full block info")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-11-05T14:07:15.709Z[GMT]")
public class FullBlockInfo {
  @SerializedName("header")
  private HeaderInfo header = null;

  @SerializedName("blockTransactions")
  private List<TransactionInfo1> blockTransactions = null;

  @SerializedName("extension")
  private BlockExtensionInfo extension = null;

  @SerializedName("adProofs")
  private String adProofs = null;

  public FullBlockInfo header(HeaderInfo header) {
    this.header = header;
    return this;
  }

   /**
   * Get header
   * @return header
  **/
  @Schema(required = true, description = "")
  public HeaderInfo getHeader() {
    return header;
  }

  public void setHeader(HeaderInfo header) {
    this.header = header;
  }

  public FullBlockInfo blockTransactions(List<TransactionInfo1> blockTransactions) {
    this.blockTransactions = blockTransactions;
    return this;
  }

  public FullBlockInfo addBlockTransactionsItem(TransactionInfo1 blockTransactionsItem) {
    if (this.blockTransactions == null) {
      this.blockTransactions = new ArrayList<TransactionInfo1>();
    }
    this.blockTransactions.add(blockTransactionsItem);
    return this;
  }

   /**
   * Get blockTransactions
   * @return blockTransactions
  **/
  @Schema(description = "")
  public List<TransactionInfo1> getBlockTransactions() {
    return blockTransactions;
  }

  public void setBlockTransactions(List<TransactionInfo1> blockTransactions) {
    this.blockTransactions = blockTransactions;
  }

  public FullBlockInfo extension(BlockExtensionInfo extension) {
    this.extension = extension;
    return this;
  }

   /**
   * Get extension
   * @return extension
  **/
  @Schema(required = true, description = "")
  public BlockExtensionInfo getExtension() {
    return extension;
  }

  public void setExtension(BlockExtensionInfo extension) {
    this.extension = extension;
  }

  public FullBlockInfo adProofs(String adProofs) {
    this.adProofs = adProofs;
    return this;
  }

   /**
   * Serialized hex-encoded AD Proofs
   * @return adProofs
  **/
  @Schema(description = "Serialized hex-encoded AD Proofs")
  public String getAdProofs() {
    return adProofs;
  }

  public void setAdProofs(String adProofs) {
    this.adProofs = adProofs;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FullBlockInfo fullBlockInfo = (FullBlockInfo) o;
    return Objects.equals(this.header, fullBlockInfo.header) &&
        Objects.equals(this.blockTransactions, fullBlockInfo.blockTransactions) &&
        Objects.equals(this.extension, fullBlockInfo.extension) &&
        Objects.equals(this.adProofs, fullBlockInfo.adProofs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(header, blockTransactions, extension, adProofs);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FullBlockInfo {\n");
    
    sb.append("    header: ").append(toIndentedString(header)).append("\n");
    sb.append("    blockTransactions: ").append(toIndentedString(blockTransactions)).append("\n");
    sb.append("    extension: ").append(toIndentedString(extension)).append("\n");
    sb.append("    adProofs: ").append(toIndentedString(adProofs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
